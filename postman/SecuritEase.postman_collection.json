{
	"info": {
		"_postman_id": "2fb00291-abdd-4a77-b4c1-223f1aab873a",
		"name": "SecuritEase",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "24771316",
		"_collection_link": "https://winter-equinox-477717.postman.co/workspace/Apeiron-Technologies~41f20fa9-366e-41f1-83e1-e7c9801917be/collection/24771316-2fb00291-abdd-4a77-b4c1-223f1aab873a?action=share&source=collection_link&creator=24771316"
	},
	"item": [
		{
			"name": "Keycloak",
			"item": [
				{
					"name": "Metrics",
					"item": [
						{
							"name": "Root",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{keycloak_host}}/realms/{{realm}}/.well-known/openid-configuration",
									"host": [
										"{{keycloak_host}}"
									],
									"path": [
										"realms",
										"{{realm}}",
										".well-known",
										"openid-configuration"
									]
								}
							},
							"response": []
						},
						{
							"name": "Introspect Token",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "client_id",
											"value": "{{client_id}}",
											"type": "text"
										},
										{
											"key": "client_secret",
											"value": "{{client_secret}}",
											"type": "text"
										},
										{
											"key": "token",
											"value": "{{access_token}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{keycloak_host}}/realms/{{realm}}/protocol/openid-connect/token/introspect",
									"host": [
										"{{keycloak_host}}"
									],
									"path": [
										"realms",
										"{{realm}}",
										"protocol",
										"openid-connect",
										"token",
										"introspect"
									]
								}
							},
							"response": []
						}
					],
					"description": "Here you can get information pertaining to the Keycloak server and its operations. You can also run introspection on a given JWT."
				},
				{
					"name": "Tokens",
					"item": [
						{
							"name": "Client",
							"item": [
								{
									"name": "Token -client",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "client_id",
													"value": "{{client_id}}",
													"type": "text"
												},
												{
													"key": "client_secret",
													"value": "{{client_secret}}",
													"type": "text"
												},
												{
													"key": "grant_type",
													"value": "{{grant_type}}",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{keycloak_host}}/realms/{{realm}}/protocol/openid-connect/token",
											"host": [
												"{{keycloak_host}}"
											],
											"path": [
												"realms",
												"{{realm}}",
												"protocol",
												"openid-connect",
												"token"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "JWT Role Based Token",
							"item": [
								{
									"name": "Admin User - Access to all api's",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "client_id",
													"value": "{{client_id}}",
													"type": "text"
												},
												{
													"key": "client_secret",
													"value": "{{client_secret}}",
													"type": "text"
												},
												{
													"key": "grant_type",
													"value": "password",
													"type": "text"
												},
												{
													"key": "username",
													"value": "admin",
													"type": "text"
												},
												{
													"key": "password",
													"value": "admin",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{keycloak_host}}/realms/{{realm}}/protocol/openid-connect/token",
											"host": [
												"{{keycloak_host}}"
											],
											"path": [
												"realms",
												"{{realm}}",
												"protocol",
												"openid-connect",
												"token"
											]
										}
									},
									"response": []
								},
								{
									"name": "Restricted User - Only view access",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "client_id",
													"value": "{{client_id}}",
													"type": "text"
												},
												{
													"key": "client_secret",
													"value": "{{client_secret}}",
													"type": "text"
												},
												{
													"key": "grant_type",
													"value": "password",
													"type": "text"
												},
												{
													"key": "username",
													"value": "user",
													"type": "text"
												},
												{
													"key": "password",
													"value": "user",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{keycloak_host}}/realms/{{realm}}/protocol/openid-connect/token",
											"host": [
												"{{keycloak_host}}"
											],
											"path": [
												"realms",
												"{{realm}}",
												"protocol",
												"openid-connect",
												"token"
											]
										}
									},
									"response": []
								}
							]
						}
					],
					"description": "Here you can request tokens for either the client itself which will give you realm management access. Jwt role based auth to get tokens for specific api authorisation.\n\nCurrently there are two users admin that has full access and user that only has viewing access.",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"packages": {},
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"packages": {},
								"exec": [
									"var jsonData = pm.response.json();\r",
									"pm.environment.set(\"access_token\", jsonData.access_token)"
								]
							}
						}
					]
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"packages": {},
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"packages": {},
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Order",
			"item": [
				{
					"name": "Get Orders",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8081/order",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8081",
							"path": [
								"order"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Orders Paging",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8081/order/:page/:size",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8081",
							"path": [
								"order",
								":page",
								":size"
							],
							"variable": [
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "size",
									"value": "20"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Order By ID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8081/order/:id",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8081",
							"path": [
								"order",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "102"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Order",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": \"\",\r\n    \"description\": \"Test Products Order\",\r\n    \"customer\": {\r\n        \"id\": 19,\r\n        \"name\": \"Moses Johnson\"\r\n    },\r\n    \"products\": [\r\n        {\r\n            \"id\": 1\r\n        },\r\n        {\r\n            \"id\": 2\r\n        },\r\n        {\r\n            \"id\": 3\r\n        },\r\n        {\r\n            \"id\": 4\r\n        },\r\n        {\r\n            \"id\": 5\r\n        }\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8081/order",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8081",
							"path": [
								"order"
							]
						}
					},
					"response": []
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "{{access_token}}",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"packages": {},
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"packages": {},
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Customer",
			"item": [
				{
					"name": "Get Customers",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8081/customer",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8081",
							"path": [
								"customer"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Customers Paging",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8081/customer/:page/:size",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8081",
							"path": [
								"customer",
								":page",
								":size"
							],
							"variable": [
								{
									"key": "page",
									"value": "0"
								},
								{
									"key": "size",
									"value": "10"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Customers By Name",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8081/customer/:name",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8081",
							"path": [
								"customer",
								":name"
							],
							"variable": [
								{
									"key": "name",
									"value": "Moses"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Customer",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": \"\",\r\n    \"name\": \"John Doe\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8081/customer",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8081",
							"path": [
								"customer"
							]
						}
					},
					"response": []
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "{{access_token}}",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"packages": {},
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"packages": {},
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Product",
			"item": [
				{
					"name": "Get Products",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8081/products",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8081",
							"path": [
								"products"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Product By Id",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8081/products/:id",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8081",
							"path": [
								"products",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "5"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Product",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": \"\",\r\n  \"description\": \"New Product\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8081/products",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8081",
							"path": [
								"products"
							]
						}
					},
					"response": []
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "{{access_token}}",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"packages": {},
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"packages": {},
						"exec": [
							""
						]
					}
				}
			]
		}
	]
}