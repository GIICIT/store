name: Build and Run Docker Container

on:
  push:
    branches:
      - develop
  pull_request:
    branches:
      - develop

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build project with debug logs
        run: ./gradlew clean build --info

      - name: Check code formatting with Spotless
        run: ./gradlew spotlessCheck

      - name: Run tests with detailed reports
        run: ./gradlew test --stacktrace --info

      - name: Upload test reports if failed
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: test-reports
          path: build/reports/tests/

      - name: Run dependency vulnerability scan
        uses: anchore/scan-action@v3
        with:
          path: "./"
          fail-build: false

      - name: Build Docker image
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/store-service:latest .

      - name: Scan Docker image for security vulnerabilities
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: "${{ secrets.DOCKER_USERNAME }}/store-service:latest"
          format: "table"

      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push Docker image to DockerHub
        run: docker push ${{ secrets.DOCKER_USERNAME }}/store-service:latest

      - name: Capture Docker container logs before cleanup
        if: failure()
        run: docker logs store-service > container-logs.txt

      - name: Upload Docker logs for debugging
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: docker-container-logs
          path: container-logs.txt

      - name: List running containers before cleanup
        if: failure()
        run: docker ps -a

      - name: Clean up Docker image
        if: always()
        run: |
          if [ "$(docker ps -q -f name=store-service)" ]; then
            docker stop store-service
            docker rm store-service
          fi
          docker rmi store-service:latest || true
